{
    "name": "lephare/proxi-bleu",
    "license": "proprietary",
    "type": "project",
    "description": "Extranet Magasins Bleus, Barbe Bleue et Bernard Solfin. Gestion de commandes, livraisons et qualification clients",
    "autoload": {
        "psr-4": {
           "App\\": "src/App/",
            "Business\\": "src/Business/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "repositories": [
        {"type": "composer", "url": "https://repo.packagist.com/lephare/"},
        {"type": "vcs", "url": "https://github.com/erichard/postgresql-doctrine-type.git"},
        {"packagist.org": false}
    ],
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require": {
        "php": ">=7.2",
        "ext-json": "*",
        "ext-test": "*",
        "barryvdh/elfinder-flysystem-driver": "^0.2.1",
        "ddtraceweb/monolog-parser": "^1.2",
        "doctrine/doctrine-bundle": "^1.6",
        "doctrine/doctrine-migrations-bundle": "^2.0",
        "doctrine/orm": "^2.5",
        "elao/enum": "^1.0",
        "erichard/postgresql-doctrine-type": "dev-master",
        "faros-ng/faros": "dev-master",
        "friendsofsymfony/ckeditor-bundle": "^2.0",
        "friendsofsymfony/jsrouting-bundle": "^2.3",
        "goodby/csv": "1.3.*",
        "guzzlehttp/psr7": "^1.5",
        "h4cc/wkhtmltopdf-amd64": "^0.12.4",
        "helios-ag/fm-elfinder-bundle": "^9.3",
        "icomefromthenet/reverse-regex": "^0.1.0",
        "knplabs/knp-snappy-bundle": "^1.6",
        "league/fractal": "^0.17.0",
        "liip/monitor-bundle": "^2.10",
        "misd/phone-number-bundle": "^1.3",
        "oneup/flysystem-bundle": "^3.1",
        "opsway/doctrine-dbal-postgresql": "~0.1",
        "oro/doctrine-extensions": "^1.2",
        "php-http/cache-plugin": "^1.6",
        "php-http/curl-client": "^1.7",
        "php-http/httplug-bundle": "^1.14",
        "php-http/message": "^1.7",
        "phpoffice/phpspreadsheet": "^1.6",
        "platformsh/symfonyflex-bridge": "^1.0",
        "portphp/csv": "^1.0",
        "portphp/doctrine": "^1.0",
        "portphp/steps": "^1.0",
        "sensiolabs-de/rich-model-forms-bundle": "^0.1.0@dev",
        "sensiolabs/security-checker": "^5.0",
        "sentry/sentry-symfony": "^2.2",
        "sonata-project/notification-orm-pack": "^1.0",
        "stof/doctrine-extensions-bundle": "^1.3",
        "symfony/asset": "4.*",
        "symfony/console": "4.*",
        "symfony/dotenv": "4.*",
        "symfony/finder": "4.*",
        "symfony/flex": "^1.0",
        "symfony/form": "4.*",
        "symfony/framework-bundle": "4.*",
        "symfony/intl": "4.*",
        "symfony/monolog-bundle": "^3.1.0",
        "symfony/polyfill-apcu": "^1.0",
        "symfony/requirements-checker": "^1.1",
        "symfony/security-bundle": "4.*",
        "symfony/swiftmailer-bundle": "^3.2",
        "symfony/translation": "4.*",
        "symfony/twig-bundle": "4.*",
        "symfony/validator": "4.*",
        "symfony/webpack-encore-bundle": "^1.3",
        "symfony/yaml": "4.*",
        "twig/extensions": "^1.5",
        "twig/twig": "^2.7",
        "vinyvicente/doctrine-point-type": "dev-master",
        "white-october/pagerfanta-bundle": "^1.2",
        "willdurand/js-translation-bundle": "^2.6",
        "zendframework/zend-diactoros": "^2.1"
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "require-dev": {
        "friendsofphp/php-cs-fixer": "^2.13",
        "globtec/phpadr": "^1.0",
        "hautelook/alice-bundle": "^2.3",
        "mockery/mockery": "^1.2",
        "php-http/mock-client": "^1.2",
        "phpstan/phpstan": "^0.12",
        "phpstan/phpstan-strict-rules": "^0.12",
        "phpstan/phpstan-symfony": "^0.12",
        "sensiolabs-de/deptrac-shim": "^0.4",
        "symfony/debug-pack": "*",
        "symfony/maker-bundle": "^1.0",
        "symfony/profiler-pack": "^1.0",
        "symfony/test-pack": "^1.0",
        "symfony/web-server-bundle": "^4.1"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install --symlink --relative %PUBLIC_DIR%": "symfony-cmd",
            "requirements-checker": "script",
            "security-checker security:check": "script",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "validate-schema": "bin/console doctrine:schema:validate --skip-sync",
        "lint:php-cs-fixer": "./vendor/bin/php-cs-fixer fix --stop-on-violation --config=.php_cs.dist -v --dry-run --using-cache=no --path-mode=intersection ./src ./tests",
        "lint:phpstan": "./vendor/bin/phpstan analyse -n --ansi --memory-limit=1G",
        "lint:architecture:global": "./vendor/bin/deptrac -n --ansi",
        "lint:architecture":[
            "@lint:architecture:global"
        ],
        "lint": [
            "bin/console lint:yaml config/ --ansi",
            "@lint:php-cs-fixer",
            "@lint:phpstan",
            "@lint:architecture",
            "@validate",
            "if [ -z ${CI+x} ]; then composer validate-schema; fi"
        ],
        "fix": "vendor/bin/php-cs-fixer fix --config=.php_cs.dist -vvv --using-cache=no --path-mode=intersection ./src ./tests ./check_config",
        "ci": [
            "@lint",
            "@test"
        ],
        "test:database:prepare": [
            "bin/console --env=test doctrine:database:drop --force --if-exists",
            "bin/console --env=test doctrine:database:create --if-not-exists",
            "bin/console --env=test doctrine:schema:update --force",
            "bin/console --env=test doctrine:query:sql \"CREATE SEQUENCE order_mb_reference INCREMENT BY 1 MINVALUE 600000 START 600000\"",
            "bin/console --env=test hautelook:fixtures:load -n -q --purge-with-truncate",
            "bin/console --env=test app:views:update"
        ],
        "test:unit": "./vendor/bin/simple-phpunit",
        "test" : [
            "echo $APP_ENV",
            "@test:database:prepare",
            "@test:unit"
        ],
        "adr": "./vendor/bin/phpadr --ansi"
    },
    "config": {
        "sort-packages": true,
        "component-dir": "public/assets",
        "platform": {
            "php": "7.2"
        }
    },
    "extra": {
        "symfony": {
            "require": "4.4.*"
        },
        "ckeditor-clear": "skip"
    }
}
